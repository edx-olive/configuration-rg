# Variables for nginx role
---
nginx: true
nginx_sites: []
nginx_skip_enable_sites: False
nginx_redirects: {}
nginx_extra_sites: []
nginx_extra_configs: []
NGINX_EDXAPP_EXTRA_SITES: []
NGINX_EDXAPP_EXTRA_CONFIGS: []

NGINX_WORKER_PROCESSES: 4
NGINX_WORKER_CONNECTIONS: 768
# Override these vars for adding user to nginx.htpasswd
NGINX_USERS:
  - name: "{{ COMMON_HTPASSWD_USER }}"
    password: "{{ COMMON_HTPASSWD_PASS }}"
    state: present

NGINX_ENABLE_SSL: False
NGINX_REDIRECT_TO_HTTPS: False
# Disable handling IP disclosure for private IP addresses. This is needed by ELB to run the health checks while using `NGINX_ENABLE_SSL`.
NGINX_ALLOW_PRIVATE_IP_ACCESS: False
NGINX_HSTS_MAX_AGE: 31536000

# This variable is only checked if NGINX_REDIRECT_TO_HTTPS is true
# It should be set to one of !!null, "scheme" or "forward_for_proto"
NGINX_HTTPS_REDIRECT_STRATEGY: "scheme"

NGINX_SSL_CERTIFICATE: 'ssl-cert-snakeoil.pem'
NGINX_SSL_KEY: 'ssl-cert-snakeoil.key'
NGINX_SSL_CIPHERS: "'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA'"
NGINX_SSL_PROTOCOLS: "TLSv1 TLSv1.1 TLSv1.2"
NGINX_DH_PARAMS_PATH: "/etc/ssl/private/dhparams.pem"
NGINX_DH_KEYSIZE: 2048

# This can be one of 'p_combined' or 'ssl_combined' by default. If you
# wish to specify your own format then define it in a configuration file
# located under `nginx_conf_dir` and then use the format name specified
# in your configuration file.
NGINX_LOG_FORMAT_NAME: 'p_combined'
# When set to False, nginx will pass X-Forwarded-For, X-Forwarded-Port,
# and X-Forwarded-Proto headers through to the backend unmodified.
# This is desired when nginx is deployed behind another load balancer
# which takes care of properly setting the X-Forwarded-* headers.
# When there is no other load balancer in front of nginx, set this
# variable to True to force nginx to set the values of the X-Forwarded-*
# headers to reflect the properties of the incoming request.
NGINX_SET_X_FORWARDED_HEADERS: False

# Increasing these values allows studio to process more complex operations.
# Default timeouts limit CMS connections to 60 seconds.

NGINX_CMS_PROXY_CONNECT_TIMEOUT: !!null
NGINX_CMS_PROXY_SEND_TIMEOUT: !!null
NGINX_CMS_PROXY_READ_TIMEOUT: !!null
RG_NGINX_LMS_CLIENT_MAX_BODY_SIZE: '4M'
RG_NGINX_CMS_CLIENT_MAX_BODY_SIZE: '100M'

NGINX_SERVER_HTML_MAINTENANCE_DIR: "maintenance"

NGINX_SERVER_STATIC_FILES: []

NGINX_APT_REPO: deb http://nginx.org/packages/ubuntu/ {{ ansible_distribution_release }} nginx


nginx_app_dir: "{{ COMMON_APP_DIR }}/nginx"
nginx_data_dir: "{{ COMMON_DATA_DIR }}/nginx"
nginx_server_static_dir: "{{ nginx_data_dir }}/server-static"
nginx_conf_dir: "{{ nginx_app_dir }}/conf.d"
nginx_log_dir: "{{ COMMON_LOG_DIR }}/nginx"
nginx_sites_available_dir: "{{ nginx_app_dir }}/sites-available"
nginx_sites_enabled_dir: "/etc/nginx/sites-enabled"
nginx_user: root
nginx_htpasswd_file: "{{ nginx_app_dir }}/nginx.htpasswd"
nginx_default_sites: []

nginx_release_specific_debian_pkgs:
  xenial:
    - python-passlib
  bionic:
    - python-passlib
  focal:
    - python3-passlib

nginx_debian_pkgs: "{{ nginx_release_specific_debian_pkgs[ansible_distribution_release] }}"

NGINX_EDXAPP_ENABLE_S3_MAINTENANCE: False
nginx_default_error_page: "/server/server-error.html"
NGINX_EDXAPP_ERROR_PAGES:
  "500": "{{ nginx_default_error_page }}"
  "502": "{{ nginx_default_error_page }}"
  "504": "{{ nginx_default_error_page }}"

NGINX_EDXAPP_PROXY_INTERCEPT_ERRORS: false

CMS_HOSTNAME: '~^((stage|prod)-)?studio.*'

nginx_template_dir: "edx/app/nginx/sites-available"

nginx_xserver_gunicorn_hosts:
  - 127.0.0.1
nginx_xqueue_gunicorn_hosts:
  - 127.0.0.1
nginx_lms_gunicorn_hosts:
  - 127.0.0.1
nginx_lms_preview_gunicorn_hosts:
  - 127.0.0.1
nginx_cms_gunicorn_hosts:
  - 127.0.0.1
nginx_analytics_api_gunicorn_hosts:
  - 127.0.0.1
nginx_insights_gunicorn_hosts:
  - 127.0.0.1
nginx_gitreload_gunicorn_hosts:
  - 127.0.0.1
nginx_edx_notes_api_gunicorn_hosts:
  - 127.0.0.1
nginx_ecommerce_gunicorn_hosts:
  - 127.0.0.1
nginx_credentails_gunicorn_hosts:
  - 127.0.0.1

NGINX_EDXAPP_EMBARGO_CIDRS: []
NGINX_P3P_MESSAGE: 'CP="Open edX does not have a P3P policy."'

COMMON_ENABLE_BASIC_AUTH: False

REDIRECT_NGINX_PORT: "{{ EDXAPP_LMS_NGINX_PORT }}"
REDIRECT_SSL_NGINX_PORT: "{{ EDXAPP_LMS_SSL_NGINX_PORT }}"

CERTS_ENABLE_BASIC_AUTH: "{{ COMMON_ENABLE_BASIC_AUTH }}"
ECOMMERCE_ENABLE_BASIC_AUTH: "{{ COMMON_ENABLE_BASIC_AUTH }}"
EDXAPP_CMS_ENABLE_BASIC_AUTH: "{{ COMMON_ENABLE_BASIC_AUTH }}"
EDXAPP_LMS_ENABLE_BASIC_AUTH: "{{ COMMON_ENABLE_BASIC_AUTH }}"
EDXAPP_LMS_PREVIEW_ENABLE_BASIC_AUTH: "{{ COMMON_ENABLE_BASIC_AUTH }}"
KIBANA_ENABLE_BASIC_AUTH: "{{ COMMON_ENABLE_BASIC_AUTH }}"
XQUEUE_ENABLE_BASIC_AUTH: "{{ COMMON_ENABLE_BASIC_AUTH }}"
XSERVER_ENABLE_BASIC_AUTH: "{{ COMMON_ENABLE_BASIC_AUTH }}"

NGINX_CREATE_HTPASSWD_FILE: >
  {{
    CERTS_ENABLE_BASIC_AUTH|bool or
    ECOMMERCE_ENABLE_BASIC_AUTH|bool or
    EDXAPP_CMS_ENABLE_BASIC_AUTH|bool or
    EDXAPP_LMS_ENABLE_BASIC_AUTH|bool or
    EDXAPP_LMS_PREVIEW_ENABLE_BASIC_AUTH|bool or
    KIBANA_ENABLE_BASIC_AUTH|bool or
    XQUEUE_ENABLE_BASIC_AUTH|bool or
    XSERVER_ENABLE_BASIC_AUTH|bool
  }}

# Extra settings to add to site configuration for Studio
NGINX_EDXAPP_CMS_APP_EXTRA: ""
# Extra settings to add to site configuration for LMS
NGINX_EDXAPP_LMS_APP_EXTRA: ""

# List of subnet or IP addressess to allow to access admin endpoints
NGINX_ADMIN_ACCESS_CIDRS: []

# Set trusted network subnets or IP addresses to send correct replacement addresses
NGINX_TRUSTED_IP_CIDRS: "0.0.0.0/0"

nginx_not_skip_nebula_node_redirect: yes

localhost_ip_addr: 127.0.0.1
nginx_http_port: 80
nginx_http_elb: no
nginx_default_redirect_to_lms: false
nginx_disable_http_https_redirect: false
nginx_edx_config: True
nginx_install: False
nginx_ssl: no
nginx_ssl_template: "{{ nginx_ssl }}"
nginx_letsencrypt: no
nginx_letsencrypt_setup: no
nginx_http2: yes
insights: no
nginx_ssl_config: "ssl.conf"
nginx_ssl_config_path: "{{ nginx_app_dir }}/edx-template-{{ nginx_ssl_config }}"
nginx_config: "edx-http.conf"
nginx_config_path: "{{ nginx_app_dir }}/edx-template-{{ nginx_config }}"

NGINX_ADDITIONAL_HEADERS: []
NGINX_FORWARDED_FOR_BEHIND_PROXY: false

NGINX_ROBOT_RULES:
  - agent: '*'
    disallow: '/'

htpasswd_enabled: False
htpasswd_services: []

le_packages:
    - snapd
    - augeas-doc
    - augeas-tools
    - libssl-dev
    - dialog
    - python3-virtualenv
    - libssl1.0.0

LETSENCRYPT_ADDITIONAL_DOMAIN: []
LETSENCRYPT_DOMAIN_STING: []
LETSENCRYPT_ALL_DOMAIN: ''
letsencrypt_webroot: /var/www/letsencrypt
letsencrypt_ssl_certificate: /etc/letsencrypt/live/{{ EDXAPP_LMS_BASE }}/fullchain.pem
letsencrypt_ssl_certificate_key: /etc/letsencrypt/live/{{ EDXAPP_LMS_BASE }}/privkey.pem

NGINX_ADDITIONAL_SERVICES_CONFIG: []

use_raccoongang_ssl: False
raccoongang_ssl_path: /etc/nginx/ssl
raccoongang_ssl_src_path: ~/vault/roles/nginx
raccoongang_ssl_crt: ''
raccoongang_ssl_key: ''

nginx_ssl_selfsigned: False
nginx_ssl_selfsigned_days: 3650
nginx_ssl_selfsigned_addl_dns: []
nginx_ssl_selfsigned_path: /etc/nginx/ssl
nginx_ssl_selfsigned_ca: "files/rg_selfsigned_root.crt"
nginx_ssl_selfsigned_cakey: "files/rg_selfsigned_root.key"

nginx_default_conf_path: /etc/nginx/conf.d/default.conf
nginx_default_conf_delete: yes

ssl_trusted_certificate_path: /etc/ssl/certs/ca-certificates.crt
